//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AutomationEntities_ : DbContext
    {
        public AutomationEntities_()
            : base("name=AutomationEntities_")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<jobsWithDescription> jobsWithDescriptions { get; set; }
        public virtual DbSet<relatedOccupation> relatedOccupations { get; set; }
    
        public virtual ObjectResult<string> sp_jobstable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_jobstable");
        }
    
        public virtual ObjectResult<string> occDescription(string term)
        {
            var termParameter = term != null ?
                new ObjectParameter("term", term) :
                new ObjectParameter("term", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("occDescription", termParameter);
        }
    
        public virtual ObjectResult<string> occProbability(string term)
        {
            var termParameter = term != null ?
                new ObjectParameter("term", term) :
                new ObjectParameter("term", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("occProbability", termParameter);
        }
    
        public virtual ObjectResult<string> sp_Related(string term)
        {
            var termParameter = term != null ?
                new ObjectParameter("term", term) :
                new ObjectParameter("term", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Related", termParameter);
        }
    }
}
